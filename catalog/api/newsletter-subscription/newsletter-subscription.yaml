apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: newsletter-subscription
  description: The Newsletter Subscription Service API to create, delete, list and modifies subscriptions of the Newsletter Service
  annotations:
    "backstage.io/kubernetes-label-selector": "app.kubernetes.io/part-of=newsletter"
    'backstage.io/techdocs-ref': dir:.
  links:
    - url: https://api.agify.io
      title: API Definition
      icon: docs
spec:
  type: openapi
  lifecycle: experimental
  owner: newsletter-team
  system: newsletter
  domain: ecommerce-marketplace
  definition: |
    components:
      schemas:
        Subscription:
          properties:
            emailId:
              type: string
            firstName:
              type: string
            id:
              format: int64
              type: integer
            lastName:
              type: string
          type: object
    info:
      title: Newsletter Application - Subscription Profile Management (Rest CRUD API)
      version: "1.0"
    openapi: 3.0.1
    paths:
      /api/v1/subscription:
        post:
          operationId: createSubscription_1
          parameters:
          - in: query
            name: subscription
            required: true
            schema:
              $ref: '#/components/schemas/Subscription'
          responses:
            "201":
              content:
                application/json:
                  examples:
                    createSubscription:
                      description: Retrieves a User's attributes.
                      summary: Add subscription profile
                      value:
                      - emailId: bob@example.com
                        firstName: Bob
                        id: "1"
                        lastName: Melone
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: User's subscription profile successfully saved.
              headers:
                email_id:
                  description: Email address of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
                first_name:
                  description: First Name of the user requesting a newsletter subscriptions
                  schema:
                    type: string
                  style: simple
                id:
                  description: A ascending uniq Id beginning from 1. This Id can be used
                    to identify a record.
                  required: true
                  schema:
                    type: integer
                  style: simple
                last_name:
                  description: Last Name of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
            "404":
              content:
                application/json:
                  example:
                    error: Conflict
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Passed Email address is already registerd.
            "408":
              content:
                application/json:
                  example:
                    error: Bad Request
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Bad formated request.
          summary: Saves a provided subscription profiles.
          tags:
          - Subscription Profiles
      /api/v1/subscription/{id}:
        delete:
          operationId: deleteSubscription
          parameters:
          - description: 'The name that needs to be fetched. Use user1 for testing. '
            in: path
            name: id
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "201":
              content:
                application/json:
                  examples:
                    getUserAttribute:
                      description: Delete a user's subscription profile with the provided
                        subscription id.
                      summary: Delete a subscription profile.
                      value:
                        deleted: "true"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Ssubscription profile successfully deleted.
            "404":
              content:
                application/json:
                  examples:
                    getAllSubscription:
                      description: Retrieves a User's attributes.
                      summary: Retrieves all user subscription registered.
                      value:
                        error: Conflict
                        path: /api/v1/subscription
                        status: "404"
                        timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Subscription profile not found.
          summary: Delete a subscription profile
          tags:
          - Subscription Profiles
        get:
          operationId: getSubscriptionById
          parameters:
          - in: path
            name: id
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "302":
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: User's subscription profile succesfound by its Id.
              headers:
                email_id:
                  description: Email address of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
                first_name:
                  description: First Name of the user requesting a newsletter subscriptions
                  schema:
                    type: string
                  style: simple
                id:
                  description: A ascending uniq Id beginning from 1. This Id can be used
                    to identify a record.
                  required: true
                  schema:
                    type: integer
                  style: simple
                last_name:
                  description: Last Name of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
            "404":
              content:
                application/json:
                  schema:
                    type: string
              description: Subscription with the provided id not found.
          summary: Get a subscription profils by it's Id
          tags:
          - Subscription Profiles
        put:
          operationId: updateSubscription
          parameters:
          - in: path
            name: id
            required: true
            schema:
              format: int64
              type: integer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'
            required: true
          responses:
            "302":
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: User's subscription profile succesfound by its Id.
              headers:
                email_id:
                  description: Email address of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
                first_name:
                  description: First Name of the user requesting a newsletter subscriptions
                  schema:
                    type: string
                  style: simple
                id:
                  description: A ascending uniq Id beginning from 1. This Id can be used
                    to identify a record.
                  required: true
                  schema:
                    type: integer
                  style: simple
                last_name:
                  description: Last Name of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
            "404":
              content:
                application/json:
                  example:
                    error: Conflict
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: ubscription with the provided id not found.
          summary: Update provided user subscription profiles.
          tags:
          - Subscription Profiles
      /api/v1/subscriptions:
        get:
          operationId: getAllSubscription
          responses:
            "200":
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Subscription profiles retrieved successfully.
              headers:
                email_id:
                  description: Email address of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
                first_name:
                  description: First Name of the user requesting a newsletter subscriptions
                  schema:
                    type: string
                  style: simple
                id:
                  description: A ascending uniq Id beginning from 1. This Id can be used
                    to identify a record.
                  required: true
                  schema:
                    type: integer
                  style: simple
                last_name:
                  description: Last Name of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
            "404":
              content:
                application/json:
                  example:
                    error: Not Found
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: No ubscription profiles found.
          summary: Get all subscription profiles registered.
          tags:
          - Array of Subscription Profiles
        post:
          operationId: createSubscription
          requestBody:
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Subscription'
                  type: array
            required: true
          responses:
            "201":
              content:
                application/json:
                  examples:
                    createSubscription:
                      description: RSubmitts a Newsletter subscription profils.
                      summary: Add subscription profile.
                      value: '[{ "emailId":"bob@example.com", "firstName":"Bob",
                        "lastName":"Seger"}]'
                    createSubscriptionArray:
                      description: Submitts an array of Newsletter subscription profiles.
                      summary: Add array of subscription profiles.
                      value:
                      - emailId: bob@example.com
                        firstName: Bob
                        lastName: Seger
                      - emailId: john@example.com
                        firstName: John
                        lastName: Foggery
                      - emailId: frank@example.com
                        firstName: Frank
                        lastName: Zappa
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: User's subscription profile successfully saved.
              headers:
                email_id:
                  description: Email address of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
                first_name:
                  description: First Name of the user requesting a newsletter subscriptions
                  schema:
                    type: string
                  style: simple
                id:
                  description: A ascending uniq Id beginning from 1. This Id can be used
                    to identify a record.
                  required: true
                  schema:
                    type: integer
                  style: simple
                last_name:
                  description: Last Name of the user requesting a newsletter subscriptions.
                  schema:
                    type: string
                  style: simple
            "404":
              content:
                application/json:
                  example:
                    error: Conflict
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Passed Email address is already registerd.
            "408":
              content:
                application/json:
                  example:
                    error: Bad Request
                    path: /api/v1/subscription
                    status: "404"
                    timestamp: "2023-04-13T19:42:38.918+00:00"
                  schema:
                    $ref: '#/components/schemas/Subscription'
              description: Bad formated request.
          summary: Saves a provided array of subscription profiles.
          tags:
          - Array of Subscription Profiles
    servers:
    - url: https://newsletter-subscription.dev.tap.tanzudemohub.com
    - url: https://newsletter-subscription.dev.tapmc.tanzudemohub.com
    - url: https://newsletter-subscription.dev.aztap.tanzudemohub.com
    - url: https://newsletter-subscription.dev.tap.h2odemo.de
    tags:
    - name: Subscription REST API
    
